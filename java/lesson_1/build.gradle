
buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
        jooqVersion = '3.10.7'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


plugins {
	id "org.flywaydb.flyway" version "5.1.4"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: "${springBootVersion}"
    compile group: 'org.springframework', name: 'spring-aspects', version: '5.0.8.RELEASE'

    compile "org.postgresql:postgresql:9.4-1200-jdbc41"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.0'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	compile "com.zaxxer:HikariCP:2.4.5"
	compile('org.flywaydb:flyway-core')
	testCompile('org.springframework.boot:spring-boot-starter-test')

    // Logging
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    testRuntime 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'org.codehaus.groovy:groovy-all:2.4.11'

    // Jooq
    compile "org.jooq:jooq:${jooqVersion}"
    compile "org.jooq:jooq-codegen:${jooqVersion}"
    compile "org.jooq:jooq-meta:${jooqVersion}"
}

configurations {
    //dev {}
    all {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
}


flyway {
	url = 'jdbc:postgresql://localhost:5432/test'
	user = 'test'
	password = 'test'
	schemas = ['public']

}

task jooqGen(type: JavaExec, dependsOn: processResources) {
	description 'Generates jOOQ sources for database'
	main = "org.jooq.util.GenerationTool"
	//classpath += fileTree(dir: 'lib', include: ['*.jar'])
	classpath += files(sourceSets.main.runtimeClasspath)
	//classpath += files("$buildDir/resources/main")
	args = ["jooq-codegen.xml"]
}